function startScreen(){main.innerHTML="";const e=document.createElement("div");e.id="settings";const o=document.createElement("label");o.innerHTML="Játékosok száma";const r=document.createElement("input");r.type="number",r.min=1,r.max=4,r.value=2,o.htmlFor=r,e.appendChild(o),e.appendChild(document.createElement("br")),e.appendChild(r),e.appendChild(document.createElement("br"));const t=document.createElement("label");t.innerHTML="Játékosonként hány kincskártya";const a=document.createElement("input");a.type="number",a.min=1,a.value=1,a.max=24/r.value,o.htmlFor=a,e.appendChild(t),e.appendChild(document.createElement("br")),e.appendChild(a),e.appendChild(document.createElement("br")),r.addEventListener("change",e=>{a.max=24/r.value,a.value>24/r.value&&(a.value=a.max)});const n=document.createElement("button");n.innerHTML="Játék indítása",n.addEventListener("click",e=>{numberPlayer=r.value,numberCards=a.value,startGame(),initNewGame(),showBoard()}),e.appendChild(n),e.appendChild(document.createElement("br"));const s=document.createElement("button");s.innerHTML="Mentett játék betöltése",s.addEventListener("click",loadGame),s.disabled=0==window.localStorage.length,e.appendChild(s),e.appendChild(document.createElement("br"));const l=document.createElement("button");l.innerHTML="Leírás",l.addEventListener("click",desc),e.appendChild(l),main.appendChild(e)}function desc(){main.innerHTML="";const e=document.createElement("div");e.id="desk",e.innerHTML="<h1>A játék leírása</h1>\n    <p>A <b>katakomba</b> szobáit egy 7x7-es négyzetrács cellái jelképezik. Minden szobában adott, hogy hány falán van ajtó. Ha két szomszédos szoba érintkező falán egy-egy ajtó van, akkor át lehet menni egyik szobából a másikba. A négyzetrács páros sorait és oszlopait el lehet tolni, a többi szoba végig rögzített a játék során. Az eltolásokkal az ajtókon keresztül utak nyílnak a szobák között, így lehet eljutni a kincsekhez. Mindegyik kérő arra törekszik, hogy a katakomba szobáinak ötletes eltolásával eljusson a kincsekhez. Aki elsőként találja meg mindahányat és kiindulópontjára sikeresen visszaérkezik az a nyertes.</p>",e.appendChild(document.createElement("br"));const o=document.createElement("button");o.innerHTML="Vissza",o.addEventListener("click",startScreen),e.appendChild(o),main.appendChild(e)}function getGameElement(e,o,r){for(let t of e)if(t.row==o&&t.col==r)return t;return null}function initFixRooms(){return roomId=0,[new Room(0,0,CORNER,UP),new Room(0,6,CORNER,RIGHT),new Room(6,6,CORNER,DOWN),new Room(6,0,CORNER,LEFT),new Room(0,2,T,UP),new Room(0,4,T,UP),new Room(2,0,T,LEFT),new Room(2,2,T,LEFT),new Room(2,4,T,UP),new Room(2,6,T,RIGHT),new Room(4,0,T,LEFT),new Room(4,2,T,DOWN),new Room(4,4,T,RIGHT),new Room(4,6,T,RIGHT),new Room(6,2,T,DOWN),new Room(6,4,T,DOWN)]}function startGame(){main.innerHTML="";const e=document.createElement("div");e.id="game";const o=document.createElement("div");o.id="board",e.appendChild(o);const r=document.createElement("div");r.id="separ";const t=document.createElement("div");t.classList.add("room"),t.id="separRoom",r.appendChild(t),r.appendChild(document.createElement("br"));const a=document.createElement("button");a.innerHTML="Balra",a.addEventListener("click",rotateLeft),r.appendChild(a),r.appendChild(document.createElement("br"));const n=document.createElement("button");n.innerHTML="Jobbra",n.addEventListener("click",rotateRight),r.appendChild(n),r.appendChild(document.createElement("br")),e.appendChild(r),main.appendChild(e);const s=document.createElement("div");s.id="info",main.appendChild(s)}function initNewGame(){turn=0,turnPart=0,prevPush={row:-1,col:-1},randomRooms(),arrPlayers=[];for(let e=0;e<numberPlayer;e++)arrPlayers.push(new Player(e,arrRooms[e].row,arrRooms[e].col));randomGolds()}function initRooms(){const e=document.querySelector("#game #board");e.innerHTML="";for(let o=0;o<9;o++){const r=document.createElement("div");r.classList.add("row");for(let e=0;e<9;e++){const t=document.createElement("div");(0==o||8==o)&&e%2==0&&0!=e&&8!=e||o%2==0&&0!=o&&8!=o&&(0==e||8==e)?(t.classList.add("arrow"),0==o?(t.style.transform="rotate(180deg)",t.dataset.row=0,t.dataset.col=e-1):0==e?(t.style.transform="rotate(90deg)",t.dataset.row=o-1,t.dataset.col=0):8==e?(t.style.transform="rotate(270deg)",t.dataset.row=o-1,t.dataset.col=6):(t.dataset.row=6,t.dataset.col=e-1)):o>0&&o<8&&e>0&&e<8?t.classList.add("room"):t.classList.add("empty"),r.appendChild(t)}e.appendChild(r)}}function randomRooms(){arrRooms=initFixRooms();let e=[13,15,6];for(let o=0;o<7;o++)for(let r=0;r<7;r++)if(null==getGameElement(arrRooms,o,r)){let t=random(0,2);for(;0==e[t];)t=random(0,2);arrRooms.push(new Room(o,r,t,random(0,3))),e[t]--}arrRooms.push(new Room(-1,-1,e.findIndex(e=>e>0),random(0,3)))}function randomGolds(){arrGolds=[];for(let e=0;e<numberPlayer;e++)for(let o=0;o<numberCards;o++){let o=random(4,48);for(;null!=getGameElement(arrGolds,arrRooms[o].row,arrRooms[o].col);)o=random(4,48);arrGolds.push(new Gold(e,arrRooms[o].row,arrRooms[o].col))}}function random(e,o){return Math.floor(Math.random()*(o-e+1)+e)}function showBoard(){showInfo(),initRooms(),showGold(turn);const o=main.querySelector("#game #board");for(let e of arrRooms){if(-1!=e.row)var r=o.querySelectorAll(".row")[e.row+1].querySelectorAll(".room")[e.col];else r=document.querySelector("#separRoom");r.style.backgroundImage=`url(img/room${e.type}.png)`,r.style.transform=`rotate(${90*e.rot}deg)`,r.dataset.id=e.id}for(e of arrPlayers){const t=document.createElement("div");t.classList.add("player"),turn===e.id&&setInterval(()=>{t.style.transition="0.2s",t.style.boxShadow?t.style.boxShadow=null:t.style.boxShadow="0 0 0 8px white"},450),t.style.backgroundColor=e.color;r=o.querySelectorAll(".row")[e.row+1].querySelectorAll(".room")[e.col];r.innerHTML="",r.appendChild(t)}if(0==turnPart)for(let e of o.querySelectorAll(".arrow"))e.removeEventListener("click",pushRoom),parseInt(e.dataset.row)!==prevPush.row||parseInt(e.dataset.col)!==prevPush.col?(e.addEventListener("click",pushRoom),e.classList.add("arrowEnabled")):e.classList.remove("arrowEnabled");else showAvailableRooms(arrPlayers[turn].row,arrPlayers[turn].col,arrPlayers[turn])}function deleteGold(){for(let e of arrGolds)if(e.playerId==turn&&arrPlayers[turn].row==e.row&&arrPlayers[turn].col==e.col){console.log("törölve"),arrGolds.splice(arrGolds.indexOf(e),1);break}}function getAvailableRooms(e,o,r){const t=getGameElement(arrRooms,e,o),a=t.getWays();arrAvailableRooms.push(t),a.includes(0)&&e-1>=0&&getGameElement(arrRooms,e-1,o).getWays().includes(2)&&!arrAvailableRooms.includes(getGameElement(arrRooms,e-1,o))&&getAvailableRooms(e-1,o,2,r),a.includes(1)&&o+1<=6&&getGameElement(arrRooms,e,o+1).getWays().includes(3)&&!arrAvailableRooms.includes(getGameElement(arrRooms,e,o+1))&&getAvailableRooms(e,o+1,3,r),a.includes(2)&&e+1<=6&&getGameElement(arrRooms,e+1,o).getWays().includes(0)&&!arrAvailableRooms.includes(getGameElement(arrRooms,e+1,o))&&getAvailableRooms(e+1,o,0,r),a.includes(3)&&o-1>=0&&getGameElement(arrRooms,e,o-1).getWays().includes(1)&&!arrAvailableRooms.includes(getGameElement(arrRooms,e,o-1))&&getAvailableRooms(e,o-1,1,r)}function showAvailableRooms(e,o,r){arrAvailableRooms=[],getAvailableRooms(e,o,r);for(let e of arrAvailableRooms){const o=document.querySelector("#game #board").querySelectorAll(".row")[e.row+1].querySelectorAll(".room")[e.col];o.classList.add("availablePath"),o.addEventListener("click",()=>{r.setPosition(e.row,e.col),deleteGold(),showInfo(),turn=turn+1<numberPlayer?turn+1:0,turnPart=0,showBoard(),isWon()})}}function rotateLeft(){const e=getGameElement(arrRooms,-1,-1);e.setRotate(0==e.rot?3:e.rot-1),showBoard()}function rotateRight(){const e=getGameElement(arrRooms,-1,-1);e.setRotate(3==e.rot?0:e.rot+1),showBoard()}function pushRoom(e){const o=e.target.dataset;direction=parseInt(o.row)%2==1?0==parseInt(o.col)?LEFT:RIGHT:0==parseInt(o.row)?UP:DOWN;const r=main.querySelector("#game #board");if(direction%2==0){const e=0==direction?1:-1;prevPush.row=parseInt(o.row)+6*e,prevPush.col=parseInt(o.col);for(let t=0;t<7;t++){const a=r.querySelectorAll(".row")[t+1].querySelectorAll(".room")[parseInt(o.col)];arrRooms[a.dataset.id].setPosition(t+e,parseInt(o.col))}for(let t of arrPlayers)t.col==parseInt(o.col)&&(r.querySelectorAll(".row")[t.row+1].querySelectorAll(".room")[t.col].innerHTML="",t.setPosition(t.row+e,t.col));for(let t of arrGolds)t.col==parseInt(o.col)&&(r.querySelectorAll(".row")[t.row+1].querySelectorAll(".room")[t.col].innerHTML="",t.setPosition(t.row+e,t.col));getGameElement(arrRooms,-1,-1).setPosition(1==e?0:6,parseInt(o.col));const t=getGameElement(arrRooms,1==e?7:-1,parseInt(o.col));for(let o of arrPlayers)o.row==t.row&&o.col==t.col&&o.setPosition(1==e?0:6,o.col);for(let o of arrGolds)o.row==t.row&&o.col==t.col&&o.setPosition(1==e?0:6,o.col);t.setPosition(-1,-1)}else{const e=3==direction?1:-1;prevPush.row=parseInt(o.row),prevPush.col=parseInt(o.col)+6*e;const t=r.querySelectorAll(".row")[parseInt(o.row)+1].querySelectorAll(".room");for(let r=0;r<7;r++){const a=t[r];arrRooms[a.dataset.id].setPosition(parseInt(o.row),r+e)}for(let r of arrPlayers)r.row==parseInt(o.row)&&(t[r.col].innerHTML="",r.setPosition(r.row,r.col+e));for(let r of arrGolds)r.row==parseInt(o.row)&&(t[r.col].innerHTML="",r.setPosition(r.row,r.col+e));getGameElement(arrRooms,-1,-1).setPosition(parseInt(o.row),1==e?0:6);const a=getGameElement(arrRooms,parseInt(o.row),1==e?7:-1);for(let o of arrPlayers)o.row==a.row&&o.col==a.col&&o.setPosition(o.row,1==e?0:6);for(let o of arrGolds)o.row==a.row&&o.col==a.col&&o.setPosition(o.row,1==e?0:6);a.setPosition(-1,-1)}turnPart++,showBoard()}function showGold(e){for(let o of arrGolds)if(o.playerId==e){const e=document.createElement("div");e.classList.add("gold"),main.querySelector("#game #board").querySelectorAll(".row")[o.row+1].querySelectorAll(".room")[o.col].appendChild(e)}}function getFoundGolds(e){let o=0;for(let r of arrGolds)r.playerId==e.id&&o++;return numberCards-o}function showInfo(){const e=document.querySelector("#info");e.innerHTML="";const o=document.createElement("div");o.id="divPlayers";for(let e of arrPlayers){const r=document.createElement("div");r.innerHTML=`\n            <h2 style='color:${e.getColor()}'>${getHungarianColorName(e.getColor())} játékos</h2>\n            <p>Found ${getFoundGolds(e)} / ${numberCards}</p>\n        `,o.appendChild(r)}e.appendChild(o);const r=document.createElement("div"),t=document.createElement("button");t.innerHTML="Mentés és kilépés",t.addEventListener("click",saveGame),r.appendChild(t),r.appendChild(document.createElement("br"));const a=document.createElement("button");a.innerHTML="Új játék",a.addEventListener("click",startScreen),r.appendChild(a),e.appendChild(r)}function isWon(){for(let e of arrPlayers)e.row==arrRooms[e.id].row&&e.col==arrRooms[e.id].col&&getFoundGolds(e)==numberCards&&(console.log("nyert"),turnPart=2,showWin(e))}function getHungarianColorName(e){switch(e){case"red":return"Piros";case"blue":return"Kék";case"green":return"Zöld";default:return"Lila"}}function showWin(e){let o=`${getHungarianColorName(e.getColor())} játékos nyert!`;alert(o),startScreen()}function saveGame(){saveStorage=window.localStorage,saveStorage.clear(),saveStorage.setItem("turn",turn),saveStorage.setItem("turnPart",turnPart),saveStorage.setItem("prevPush",JSON.stringify(prevPush)),saveStorage.setItem("arrRooms",JSON.stringify(arrRooms)),saveStorage.setItem("arrPlayers",JSON.stringify(arrPlayers)),saveStorage.setItem("arrGolds",JSON.stringify(arrGolds)),saveStorage.setItem("numberPlayer",numberPlayer),saveStorage.setItem("numberCards",numberCards),startScreen()}function loadGame(){startGame(),saveStorage=window.localStorage,turn=parseInt(saveStorage.getItem("turn")),turnPart=parseInt(saveStorage.getItem("turnPart")),prevPush=JSON.parse(saveStorage.getItem("prevPush")),roomId=0,arrRooms=[];for(let e of JSON.parse(saveStorage.getItem("arrRooms")))arrRooms.push(new Room(e.row,e.col,e.type,e.rot));playerId=0,arrPlayers=[];for(let e of JSON.parse(saveStorage.getItem("arrPlayers")))arrPlayers.push(new Player(e.id,e.row,e.col));goldId=0,arrGolds=[];for(let e of JSON.parse(saveStorage.getItem("arrGolds")))arrGolds.push(new Gold(e.playerId,e.row,e.col));numberPlayer=parseInt(saveStorage.getItem("numberPlayer")),numberCards=parseInt(saveStorage.getItem("numberCards")),showBoard()}const main=document.querySelector("#main");var turn=0,turnPart=0;const UP=0,RIGHT=1,DOWN=2,LEFT=3,LINE=0,CORNER=1,T=2;var numberPlayer,numberCards,roomId=0,prevPush={row:-1,col:-1},arrPlayers=[],goldId=0,arrGolds=[];class Room{constructor(e,o,r,t){this.id=roomId++,this.row=e,this.col=o,this.type=r,this.rot=t}setPosition(e,o){this.row=e,this.col=o}setRotate(e){this.rot=e}getWays(){if(this.type==LINE)return 0==this.rot||2==this.rot?[RIGHT,LEFT]:[UP,DOWN];if(this.type==CORNER)switch(this.rot){case 0:return[RIGHT,DOWN];case 1:return[DOWN,LEFT];case 2:return[LEFT,UP];default:return[UP,RIGHT]}else switch(this.rot){case 0:return[UP,RIGHT,LEFT];case 1:return[UP,RIGHT,DOWN];case 2:return[RIGHT,DOWN,LEFT];default:return[DOWN,LEFT,UP]}}}class Player{constructor(e,o,r){switch(this.row=o,this.col=r,this.id=e,this.id){case 0:this.color="red";break;case 1:this.color="blue";break;case 2:this.color="green";break;default:this.color="purple"}}setPosition(e,o){this.row=e,this.col=o}getColor(){return this.color}}class Gold{constructor(e,o,r){this.row=o,this.col=r,this.playerId=e,this.id=goldId++}setPosition(e,o){this.row=e,this.col=o}}arrAvailableRooms=[],document.addEventListener("keydown",e=>{"ArrowLeft"==e.key?rotateLeft():"ArrowRight"==e.key&&rotateRight()}),startScreen();
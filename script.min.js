function startScreen(){main.innerHTML="";const e=document.createElement("div");e.id="settings";const o=document.createElement("label");o.innerHTML="Játékosok száma";const t=document.createElement("input");t.type="number",t.min=1,t.max=4,t.value=2,o.htmlFor=t,e.appendChild(o),e.appendChild(t);const r=document.createElement("label");r.innerHTML="Játékosonként hány kincskártya";const n=document.createElement("input");n.type="number",n.min=1,n.value=1,o.htmlFor=n,e.appendChild(r),e.appendChild(n),t.addEventListener("change",e=>{n.max=24/t.value,n.value>24/t.value&&(n.value=n.max)});const s=document.createElement("button");s.innerHTML="Játék indítása",s.addEventListener("click",e=>{numberPlayer=t.value,numberCards=n.value,startGame()}),e.appendChild(s);const a=document.createElement("button");a.innerHTML="Leírás",a.addEventListener("click",desc),e.appendChild(a),main.appendChild(e)}function desc(){main.innerHTML="";const e=document.createElement("div");e.innerHTML="<h1>A játék leírása</h1>\n    <p>A <b>katakomba</b> szobáit egy 7x7-es négyzetrács cellái jelképezik. Minden szobában adott, hogy hány falán van ajtó. Ha két szomszédos szoba érintkező falán egy-egy ajtó van, akkor át lehet menni egyik szobából a másikba. A négyzetrács páros sorait és oszlopait el lehet tolni, a többi szoba végig rögzített a játék során. Az eltolásokkal az ajtókon keresztül utak nyílnak a szobák között, így lehet eljutni a kincsekhez. Mindegyik kérő arra törekszik, hogy a katakomba szobáinak ötletes eltolásával eljusson a kincsekhez. Aki elsőként találja meg mindahányat és kiindulópontjára sikeresen visszaérkezik az a nyertes.</p>",main.appendChild(e);const o=document.createElement("button");o.innerHTML="Vissza",o.addEventListener("click",startScreen),main.appendChild(o)}function getGold(e,o){for(let t of arrGolds)if(t.row==e&&t.col==o)return t;return null}function startGame(){main.innerHTML="";const e=document.createElement("div");e.id="game";const o=document.createElement("div");o.id="board",e.appendChild(o);const t=document.createElement("div");t.id="separ";const r=document.createElement("div");r.classList.add("room"),r.id="separRoom",t.appendChild(r);const n=document.createElement("button");n.innerHTML="Balra",n.addEventListener("click",rotateLeft),t.appendChild(n);const s=document.createElement("button");s.innerHTML="Jobbra",s.addEventListener("click",rotateRight),t.appendChild(s);const a=document.createElement("label");a.innerHTML="Forgatás",t.appendChild(a),e.appendChild(t),main.appendChild(e),randomRooms();for(let e=0;e<numberPlayer;e++)arrPlayers.push(new Player(e,arrRooms[e].row,arrRooms[e].col));randomGolds(),showBoard();const l=document.createElement("div");l.id="info",main.appendChild(l),showInfo()}function initRooms(){const e=document.querySelector("#game #board");e.innerHTML="";for(let o=0;o<9;o++){const t=document.createElement("div");t.classList.add("row");for(let e=0;e<9;e++){const r=document.createElement("div");(0==o||8==o)&&e%2==0&&0!=e&&8!=e||o%2==0&&0!=o&&8!=o&&(0==e||8==e)?(r.classList.add("arrow"),0==o?(r.style.transform="rotate(180deg)",r.dataset.row=0,r.dataset.col=e-1):0==e?(r.style.transform="rotate(90deg)",r.dataset.row=o-1,r.dataset.col=0):8==e?(r.style.transform="rotate(270deg)",r.dataset.row=o-1,r.dataset.col=6):(r.dataset.row=6,r.dataset.col=e-1)):o>0&&o<8&&e>0&&e<8?r.classList.add("room"):r.classList.add("empty"),t.appendChild(r)}e.appendChild(t)}}function randomRooms(){let e=[13,15,6];for(let o=0;o<7;o++)for(let t=0;t<7;t++)if(null==getRoom(o,t)){let r=random(0,2);for(;0==e[r];)r=random(0,2);arrRooms.push(new Room(o,t,r,random(0,3))),e[r]--}arrRooms.push(new Room(-1,-1,e.findIndex(e=>e>0),random(0,3)))}function randomGolds(){for(let e=0;e<numberPlayer;e++)for(let o=0;o<numberCards;o++){let o=random(4,48);for(;null!=getGold(arrRooms[o].row,arrRooms[o].col);)o=random(4,48);arrGolds.push(new Gold(e,arrRooms[o].row,arrRooms[o].col))}}function random(e,o){return Math.floor(Math.random()*(o-e+1)+e)}function getRoom(e,o){for(let t of arrRooms)if(t.row===e&&t.col===o)return t;return null}function showBoard(){initRooms(),showGold(turn);const o=main.querySelector("#game #board");for(let e of arrRooms){if(-1!=e.row)var t=o.querySelectorAll(".row")[e.row+1].querySelectorAll(".room")[e.col];else t=document.querySelector("#separRoom");t.style.backgroundImage=`url(${e.img.src})`,t.style.transform=`rotate(${90*e.rot}deg)`,t.dataset.id=e.id}for(e of arrPlayers){const r=document.createElement("div");r.classList.add("player"),turn===e.id&&setInterval(()=>{r.style.transition="0.2s",r.style.boxShadow?r.style.boxShadow=null:r.style.boxShadow="0 0 0 8px white"},450),r.style.backgroundColor=e.color;t=o.querySelectorAll(".row")[e.row+1].querySelectorAll(".room")[e.col];t.innerHTML="",t.appendChild(r)}if(0==turnPart)for(let e of o.querySelectorAll(".arrow"))e.removeEventListener("click",pushRoom),parseInt(e.dataset.row)!==prevPush.row||parseInt(e.dataset.col)!==prevPush.col?(e.addEventListener("click",pushRoom),e.classList.add("arrowEnabled")):e.classList.remove("arrowEnabled");else showAvailableRooms(arrPlayers[turn].row,arrPlayers[turn].col,-1,arrPlayers[turn])}function deleteGold(){for(let e of arrGolds)if(e.playerId==turn&&arrPlayers[turn].row==e.row&&arrPlayers[turn].col==e.col){console.log("törölve"),arrGolds.splice(arrGolds.indexOf(e),1);break}}function showAvailableNeighbours(e,o){let t=[];for(let r of getRoom(e,o).getWays())0==r&&e-1>=0&&getRoom(e-1,o).getWays().includes(2)&&t.push(getRoom(e-1,o)),1==r&&o+1<=6&&getRoom(e,o+1).getWays().includes(3)&&t.push(getRoom(e,o+1)),2==r&&e+1<=6&&getRoom(e+1,o).getWays().includes(0)&&t.push(getRoom(e+1,o)),3==r&&o-1>=0&&getRoom(e,o-1).getWays().includes(1)&&t.push(getRoom(e,o-1));return t}function showAvailableRooms(e,o,t,r){const n=getRoom(e,o).getWays(),s=getRoom(e,o);0!=t&&n.includes(0)&&e-1>=0&&getRoom(e-1,o).getWays().includes(2)&&showAvailableRooms(e-1,o,2,r),1!=t&&n.includes(1)&&o+1<=6&&getRoom(e,o+1).getWays().includes(3)&&showAvailableRooms(e,o+1,3,r),2!=t&&n.includes(2)&&e+1<=6&&getRoom(e+1,o).getWays().includes(0)&&showAvailableRooms(e+1,o,0,r),3!=t&&n.includes(3)&&o-1>=0&&getRoom(e,o-1).getWays().includes(1)&&showAvailableRooms(e,o-1,1,r);const a=document.querySelector("#game #board").querySelectorAll(".row")[s.row+1].querySelectorAll(".room")[s.col];a.classList.add("availablePath"),a.addEventListener("click",()=>{r.setPosition(e,o),deleteGold(),showInfo(),turn=turn+1<numberPlayer?turn+1:0,turnPart=0,showBoard(),isWon()})}function rotateLeft(){const e=getRoom(-1,-1);e.setRotate(0==e.rot?3:e.rot-1),showBoard()}function rotateRight(){const e=getRoom(-1,-1);e.setRotate(3==e.rot?0:e.rot+1),showBoard()}function pushRoom(e){const o=e.target.dataset;direction=parseInt(o.row)%2==1?0==parseInt(o.col)?LEFT:RIGHT:0==parseInt(o.row)?UP:DOWN;const t=main.querySelector("#game #board");if(direction%2==0){const e=0==direction?1:-1;prevPush.row=parseInt(o.row)+6*e,prevPush.col=parseInt(o.col);for(let r=0;r<7;r++){const n=t.querySelectorAll(".row")[r+1].querySelectorAll(".room")[parseInt(o.col)];arrRooms[n.dataset.id].setPosition(r+e,parseInt(o.col))}for(let r of arrPlayers)r.col==parseInt(o.col)&&(t.querySelectorAll(".row")[r.row+1].querySelectorAll(".room")[r.col].innerHTML="",r.setPosition(r.row+e,r.col));for(let r of arrGolds)r.col==parseInt(o.col)&&(t.querySelectorAll(".row")[r.row+1].querySelectorAll(".room")[r.col].innerHTML="",r.setPosition(r.row+e,r.col));getRoom(-1,-1).setPosition(1==e?0:6,parseInt(o.col));const r=getRoom(1==e?7:-1,parseInt(o.col));for(let o of arrPlayers)o.row==r.row&&o.col==r.col&&o.setPosition(1==e?0:6,o.col);for(let o of arrGolds)o.row==r.row&&o.col==r.col&&o.setPosition(1==e?0:6,o.col);r.setPosition(-1,-1)}else{const e=3==direction?1:-1;prevPush.row=parseInt(o.row),prevPush.col=parseInt(o.col)+6*e;const r=t.querySelectorAll(".row")[parseInt(o.row)+1].querySelectorAll(".room");for(let t=0;t<7;t++){const n=r[t];arrRooms[n.dataset.id].setPosition(parseInt(o.row),t+e)}for(let t of arrPlayers)t.row==parseInt(o.row)&&(r[t.col].innerHTML="",t.setPosition(t.row,t.col+e));for(let t of arrGolds)t.row==parseInt(o.row)&&(r[t.col].innerHTML="",t.setPosition(t.row,t.col+e));getRoom(-1,-1).setPosition(parseInt(o.row),1==e?0:6);const n=getRoom(parseInt(o.row),1==e?7:-1);for(let o of arrPlayers)o.row==n.row&&o.col==n.col&&o.setPosition(o.row,1==e?0:6);for(let o of arrGolds)o.row==n.row&&o.col==n.col&&o.setPosition(o.row,1==e?0:6);n.setPosition(-1,-1)}turnPart++,showBoard()}function showGold(e){for(let o of arrGolds)if(o.playerId==e){const e=document.createElement("div");e.classList.add("gold"),main.querySelector("#game #board").querySelectorAll(".row")[o.row+1].querySelectorAll(".room")[o.col].appendChild(e)}}function getFoundGolds(e){let o=0;for(let t of arrGolds)t.playerId==e&&o++;return numberCards-o}function showInfo(){const e=document.querySelector("#info");e.innerHTML="";const o=document.createElement("div");o.id="divPlayers";for(let e=0;e<numberPlayer;e++){const t=document.createElement("div");t.innerHTML=`\n            <h2>Player ${e+1}</h2>\n            <p>Found ${getFoundGolds(e)} / ${numberCards}</p>\n        `,o.appendChild(t)}e.appendChild(o)}function isWon(){for(let e of arrPlayers)e.row==arrRooms[e.id].row&&e.col==arrRooms[e.id].col&&getFoundGolds(e.id)==numberCards&&(console.log("nyert"),turnPart=2,showWin(e))}function showWin(e){let o="";switch(e.getColor()){case"red":o+="Piros";break;case"blue":o+="Kék";break;case"green":o+="Zöld";break;default:o+="Lila"}o+=" játékos nyert!",alert(o),startScreen()}const main=document.querySelector("#main");var turn=0,turnPart=0;const UP=0,RIGHT=1,DOWN=2,LEFT=3,LINE=0,CORNER=1,T=2;var numberPlayer,numberCards,roomId=0,prevPush={row:-1,col:-1},arrPlayers=[],goldId=0,arrGolds=[];class Room{constructor(e,o,t,r){switch(this.id=roomId++,this.row=e,this.col=o,this.type=t,t){case 0:this.img=new Image,this.img.src="img/line.png";break;case 1:this.img=new Image,this.img.src="img/corner.png";break;case 2:this.img=new Image,this.img.src="img/t.png"}this.rot=r}setGold(e){this.gold=e}setPosition(e,o){this.row=e,this.col=o}setRotate(e){this.rot=e}getWays(){if(this.type==LINE)return 0==this.rot||2==this.rot?[RIGHT,LEFT]:[UP,DOWN];if(this.type==CORNER)switch(this.rot){case 0:return[RIGHT,DOWN];case 1:return[DOWN,LEFT];case 2:return[LEFT,UP];default:return[UP,RIGHT]}else switch(this.rot){case 0:return[UP,RIGHT,LEFT];case 1:return[UP,RIGHT,DOWN];case 2:return[RIGHT,DOWN,LEFT];default:return[DOWN,LEFT,UP]}}}class Player{constructor(e,o,t){switch(this.row=o,this.col=t,this.id=e,this.id){case 0:this.color="red";break;case 1:this.color="blue";break;case 2:this.color="green";break;default:this.color="purple"}}setPosition(e,o){this.row=e,this.col=o}getColor(){return this.color}}class Gold{constructor(e,o,t){this.row=o,this.col=t,this.playerId=e,this.id=goldId++}setPosition(e,o){this.row=e,this.col=o}}let arrRooms=[new Room(0,0,CORNER,UP),new Room(0,6,CORNER,RIGHT),new Room(6,6,CORNER,DOWN),new Room(6,0,CORNER,LEFT),new Room(0,2,T,UP),new Room(0,4,T,UP),new Room(2,0,T,LEFT),new Room(2,2,T,LEFT),new Room(2,4,T,UP),new Room(2,6,T,RIGHT),new Room(4,0,T,LEFT),new Room(4,2,T,DOWN),new Room(4,4,T,RIGHT),new Room(4,6,T,RIGHT),new Room(6,2,T,DOWN),new Room(6,4,T,DOWN)];document.addEventListener("keydown",e=>{"ArrowLeft"==e.key?rotateLeft():"ArrowRight"==e.key&&rotateRight()}),startScreen();